package towerDefense;
import java.awt.event.KeyEvent;
import javax.swing.JFrame;


public class Spielablauf {
	
	//Array spiegelt Spielfeld wieder
	final static int spielfeldBreite = 25;
	final static int spielfeldHöhe  = 25;
	final static int quadratGröße = 30;
	final static int[][] spielfeld = new int[spielfeldBreite][spielfeldHöhe]; 
	
	
	public void starten(){
		spielablauf();
	}

	private void spielablauf(){
		
	/*	for(int i = 0; i<spielfeld.length; i++){
			for(int j = 0; j<spielfeld[i].length; j++){
				System.out.print(spielfeld[i][j] + "   ");
			}
			System.out.println();
		}
	*/	
		
		
		Frame f = new Frame();
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		f.setSize(spielfeldBreite*quadratGröße+300, spielfeldHöhe*quadratGröße+1);
		f.setUndecorated(true);
		f.setVisible(true);
		f.setResizable(false);
		f.setLocationRelativeTo(null);
//		DisplayMode displayMode = new DisplayMode(800, 600, 16, 75);
//		GraphicsEnvironment environment = GraphicsEnvironment.getLocalGraphicsEnvironment();
//		GraphicsDevice device = environment.getDefaultScreenDevice();
//		
//		device.setFullScreenWindow(f);
//		device.setDisplayMode(displayMode);
		
		f.makeStrat();
		
		long lastFrame = System.currentTimeMillis();
		while(true){
			if(KeyHandler.isKeyDown(KeyEvent.VK_ESCAPE))System.exit(0);
						
			long thisFrame = System.currentTimeMillis();
			float timeSinceLastFrame = ((float)(thisFrame-lastFrame))/1000f;
			lastFrame=thisFrame;

			
			f.repaintScreen();
			

			
			try {
				Thread.sleep(15);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
}